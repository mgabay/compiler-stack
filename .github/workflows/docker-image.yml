name: Docker Image CI

on:
  workflow_dispatch:
    inputs:
      platform:
        description: 'Target platform and compiler set'
        required: true
        default: 'x64-intel'
        type: choice
        options:
          - x64-intel
          - x64-amd
          - arm64-acfl
      no-cache:
        description: 'Skip cache'
        required: true
        default: true
        type: boolean
      pull:
        description: 'Pull base images'
        required: true
        default: false
        type: boolean
      push:
        description: 'Push images'
        required: true
        default: false
        type: boolean
      free_disk:
        description: 'Free disk space'
        required: true
        default: false
        type: boolean
  schedule:
    - cron: '45 0 * * 6' #intel at 00:45 on Saturday
    - cron: '45 0 * * 0' #amd at 00:45 on Sunday
    - cron: '45 3 * * 0' #arm at 03:45 on Sunday

jobs:
  setup:
    runs-on: ubuntu-24.04
    outputs:
      runner: ${{ steps.schedenv.outputs.runner || steps.arch.outputs.runner }}
      target_platform: ${{ steps.schedenv.outputs.target_platform || steps.arch.outputs.target_platform }}
      build-target: ${{ inputs.platform || steps.schedenv.outputs.build-target }}
    steps:
      - name: Check target architecture
        id: arch
        if: ${{ github.event_name == 'workflow_dispatch' }}
        run: |
          if [ "${{ inputs.platform }}" == 'arm64-acfl' ]; then
            echo "runner=ubuntu-24.04-arm" >> $GITHUB_OUTPUT
            echo "target_platform=linux/arm64" >> $GITHUB_OUTPUT
          else
            echo "runner=ubuntu-24.04" >> $GITHUB_OUTPUT
            echo "target_platform=linux/amd64" >> $GITHUB_OUTPUT
          fi
      - name: Set parameters for scheduled jobs
        id: schedenv
        if: ${{ github.event_name == 'schedule' }}
        run: |
          if [ "${{ github.event.schedule }}" == '45 4 * * *' ]; then
            echo "Prepare arm64 build"
            echo "runner=ubuntu-24.04-arm" >> $GITHUB_OUTPUT
            echo "target_platform=linux/arm64" >> $GITHUB_OUTPUT
            echo "build-target=arm64-acfl" >> $GITHUB_OUTPUT
          else
            echo "Prepare x64 build"
            echo "runner=ubuntu-24.04" >> $GITHUB_OUTPUT
            echo "target_platform=linux/amd64" >> $GITHUB_OUTPUT
            if [ "${{ github.event.schedule }}" == '45 2 * * *' ]; then
              echo "Prepare amd64 build"
              echo "build-target=x64-amd" >> $GITHUB_OUTPUT
            else
              echo "Prepare intel64 build"
              echo "build-target=x64-intel" >> $GITHUB_OUTPUT
            fi 
          fi


  build:
    needs: [setup]
    runs-on: ${{ needs.setup.outputs.runner }}
    env:
      PUSH: ${{ inputs.push }}
      PULL: ${{ inputs.pull }}
      NO_CACHE: ${{ inputs.no-cache }}
      NIGHTLY: ${{ github.event_name == 'schedule' }}
      FREE_DISK: ${{ inputs.free_disk }}

    steps:
    - name: Setup undefined environment variables
      run: |
        if [ "$PUSH" == "" ]; then
          echo "PUSH=true" >> $GITHUB_ENV
        fi
        if [ "$PULL" == "" ]; then
          echo "PULL=true" >> $GITHUB_ENV
        fi
        if [ "$NO_CACHE" == "" ]; then
          echo "NO_CACHE=true" >> $GITHUB_ENV
        fi
        if [ "$FREE_DISK" == "" ]; then
          echo "FREE_DISK=true" >> $GITHUB_ENV
        fi
    
    - name: Display env
      run: |
        echo "====================== Build Parameters ======================"
        echo "Parameters used for build are:"
        echo "  Runner: ${{ needs.setup.outputs.runner }}"
        echo "  Push: $PUSH"
        echo "  Pull: $PULL"
        echo "  No-cache: $NO_CACHE"
        echo "  Nightly: $NIGHTLY"
        echo "  Free disk: $FREE_DISK"
        echo "  Build target: ${{ needs.setup.outputs.build-target }}"
        echo "  Target platform: ${{ needs.setup.outputs.target_platform }}"
        echo "=============================================================="
        echo "Free disk space:"
        df -h
        echo "=============================================================="

    - name: Free disk space
      if: env.FREE_DISK == 'true'
      uses: AdityaGarg8/remove-unwanted-software@v5
      with:
        remove-android: 'true'
        remove-dotnet: 'true'
        remove-haskell: 'true'
        remove-codeql: 'true'
        remove-docker-images: 'true'
        remove-large-packages: 'true'
        remove-cached-tools: 'true'
        remove-swapfile: 'true'
        verbose: 'true'

    - name: Check out the repo
      uses: actions/checkout@v4

    - name: Log in to Docker Hub
      uses: docker/login-action@v3.3.0
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Build and push
      uses: docker/bake-action@v6
      with:
        files: ./docker/ol8/docker-bake.hcl
        workdir: ./docker/ol8/
        push: ${{env.PUSH}}
        pull: ${{env.PULL}}
        no-cache: ${{env.NO_CACHE}}
        targets: ${{ needs.setup.outputs.build-target }}
        set: |
          *.context=docker/ol8
          *.platform=${{ needs.setup.outputs.target_platform }}
